[
  {
    "id": "event-dispatcher-router-mashling",
    "featured": true,
    "repository_url": null,
    "json_url": "...event-dispatcher-router-mashling/event-dispatcher-router-mashling.mashling.json",
    "image_url": "...event-dispatcher-router-mashling/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...event-dispatcher-router-mashling/event-dispatcher-router-mashling-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...event-dispatcher-router-mashling/event-dispatcher-router-mashling-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "mashling_schema": "0.2",
    "gateway": {
      "name": "event-dispatcher-router-mashling",
      "version": "1.0.0",
      "display_name": "Event Dispatcher And Router",
      "display_image": "displayImage.svg",
      "description": "Apache Kafka based event dispatcher that conditionally routes events to various handlers based on content",
      "configurations": [
        {
          "name": "kafkaConfig",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/kafkasubrouter",
          "description": "Configuration for kafka cluster",
          "settings": {
            "BrokerUrl": "localhost:9092"
          }
        }
      ],
      "triggers": [
        {
          "name": "users_trigger",
          "description": "The trigger on kafka 'users' topic",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/kafkasubrouter",
          "settings": {
            "Topic": "users",
            "config": "${configurations.kafkaConfig}"
          }
        }
      ],
      "event_handlers": [
        {
          "name": "usa_users_topic_handler",
          "description": "Handle the user access for USA users",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/kafkaFlow.json"
        },
        {
          "name": "asia_users_topic_handler",
          "description": "Handle the user access for asia users",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/kafkaFlow.json"
        }
      ],
      "event_links": [
        {
          "triggers": [
            "users_trigger"
          ],
          "dispatches": [
            {
              "if": "${trigger.content.country == USA}",
              "handler": "usa_users_topic_handler"
            },
            {
              "if": "${trigger.content.country in (IND,CHN,JPN)}",
              "handler": "asia_users_topic_handler"
            }
          ]
        }
      ]
    },
    "id": "event-dispatcher-router-mashling",
    "featured": true,
    "repository_url": null,
    "json_url": "...event-dispatcher-router-mashling/event-dispatcher-router-mashling.mashling.json",
    "image_url": "...event-dispatcher-router-mashling/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...event-dispatcher-router-mashling/event-dispatcher-router-mashling-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...event-dispatcher-router-mashling/event-dispatcher-router-mashling-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "id": "rest-conditional-gateway",
    "featured": false,
    "repository_url": null,
    "json_url": "...rest-conditional-gateway/rest-conditional-gateway.mashling.json",
    "image_url": "...rest-conditional-gateway/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...rest-conditional-gateway/rest-conditional-gateway-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...rest-conditional-gateway/rest-conditional-gateway-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "mashling_schema": "0.2",
    "gateway": {
      "name": "demoRestGw",
      "version": "1.0.0",
      "display_name": "Content-based HTTP Router",
      "display_image": "displayImage.svg",
      "description": "A conditional HTTP router that routes requests based on content",
      "configurations": [
        {
          "name": "restConfig",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "description": "Configuration for rest trigger",
          "settings": {
            "port": "9096"
          }
        }
      ],
      "triggers": [
        {
          "name": "animals_rest_trigger",
          "description": "Animals rest trigger - PUT animal details",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "settings": {
            "config": "${configurations.restConfig}",
            "method": "PUT",
            "path": "/pets",
            "optimize": "true"
          }
        },
        {
          "name": "get_animals_rest_trigger",
          "description": "Animals rest trigger - get animal details",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "settings": {
            "config": "${configurations.restConfig}",
            "method": "GET",
            "path": "/pets/{petId}",
            "optimize": "true"
          }
        }
      ],
      "event_handlers": [
        {
          "name": "mammals_handler",
          "description": "Handle mammals",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestPutActivity.json"
        },
        {
          "name": "birds_handler",
          "description": "Handle birds",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestPutActivity.json"
        },
        {
          "name": "animals_handler",
          "description": "Handle other animals",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestPutActivity.json"
        },
        {
          "name": "animals_get_handler",
          "description": "Handle other animals",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestGetActivity.json"
        }
      ],
      "event_links": [
        {
          "triggers": [
            "animals_rest_trigger"
          ],
          "dispatches": [
            {
              "if": "${trigger.content.name in (ELEPHANT,CAT)}",
              "handler": "mammals_handler"
            },
            {
              "if": "${trigger.content.name == SPARROW}",
              "handler": "birds_handler"
            },
            {
              "handler": "animals_handler"
            }
          ]
        },
        {
          "triggers": [
            "get_animals_rest_trigger"
          ],
          "dispatches": [
            {
              "handler": "animals_get_handler"
            }
          ]
        }
      ]
    },
    "id": "rest-conditional-gateway",
    "featured": false,
    "repository_url": null,
    "json_url": "...rest-conditional-gateway/rest-conditional-gateway.mashling.json",
    "image_url": "...rest-conditional-gateway/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...rest-conditional-gateway/rest-conditional-gateway-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...rest-conditional-gateway/rest-conditional-gateway-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "id": "rest-gateway-with-tracing",
    "featured": false,
    "repository_url": null,
    "json_url": "...rest-gateway-with-tracing/rest-gateway-with-tracing.mashling.json",
    "image_url": "...rest-gateway-with-tracing/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...rest-gateway-with-tracing/rest-gateway-with-tracing-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...rest-gateway-with-tracing/rest-gateway-with-tracing-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "mashling_schema": "0.2",
    "gateway": {
      "name": "rest-gateway-with-tracing",
      "version": "1.0.0",
      "display_name": "Distributed Tracing",
      "display_image": "displayImage.svg",
      "description": "A microgateway with distributed tracing configured with Zipkin as the tracer",
      "configurations": [
        {
          "name": "restConfig",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "description": "Configuration for rest trigger",
          "settings": {
            "port": "9096",
            "tracer": "zipkin",
            "tracerEndpoint": "http://localhost:9411/api/v1/spans"
          }
        }
      ],
      "triggers": [
        {
          "name": "rest_trigger",
          "description": "The trigger on 'pets' endpoint",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "settings": {
            "config": "${configurations.restConfig}",
            "method": "GET",
            "path": "/pets/{petId}",
            "optimize": "true"
          }
        }
      ],
      "event_handlers": [
        {
          "name": "get_pet_handler",
          "description": "Handle the user access",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/Tracing.json"
        }
      ],
      "event_links": [
        {
          "triggers": [
            "rest_trigger"
          ],
          "dispatches": [
            {
              "handler": "get_pet_handler"
            }
          ]
        }
      ]
    },
    "id": "rest-gateway-with-tracing",
    "featured": false,
    "repository_url": null,
    "json_url": "...rest-gateway-with-tracing/rest-gateway-with-tracing.mashling.json",
    "image_url": "...rest-gateway-with-tracing/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...rest-gateway-with-tracing/rest-gateway-with-tracing-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...rest-gateway-with-tracing/rest-gateway-with-tracing-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "id": "mqtt-lambda-tci",
    "featured": true,
    "repository_url": null,
    "json_url": "...mqtt-lambda-tci/mqtt-lambda-tci.mashling.json",
    "image_url": "...mqtt-lambda-tci/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...mqtt-lambda-tci/mqtt-lambda-tci-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...mqtt-lambda-tci/mqtt-lambda-tci-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "mashling_schema": "0.2",
    "gateway": {
      "name": "MQTT FaaS Dispatcher",
      "version": "1.0.0",
      "display_name": "MQTT FaaS Dispatcher",
      "display_image": "displayImage.svg",
      "description": "MQTT trigger that content routes to either a AWS Lambda function or an endpoint for Live Apps case creation",
      "configurations": [
        {
          "name": "mqttConfig",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/mqtt",
          "description": "Configuration for MQTT",
          "settings": {
            "broker": "tcp://localhost:1883",
            "id": "flogo",
            "user": "",
            "password": "",
            "store": "",
            "qos": "0",
            "cleansess": "false",
            "tracer": "zipkin",
            "tracerEndpoint": "http://localhost:9411/api/v1/spans"
          }
        }
      ],
      "triggers": [
        {
          "name": "MQTT_Trigger",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/mqtt",
          "settings": {
            "config": "${configurations.mqttConfig}",
            "topic": "alert",
            "optimize": "true"
          }
        }
      ],
      "event_handlers": [
        {
          "name": "Predictive_Maintenance",
          "description": "Lambda function - predictive maintenance",
          "reference": "github.com/pointlander/lambda/lib/flow/Lambda.json"
        },
        {
          "name": "Call_Field_OPS",
          "description": "Live Apps case - Field Ops",
          "reference": "github.com/raji-narayanan/mashlingflows/mqtt-to-http-flow.json"
        }
      ],
      "event_links": [
        {
          "triggers": [
            "MQTT_Trigger"
          ],
          "dispatches": [
            {
              "if": "${trigger.content.type in (urgent,critical)}",
              "handler": "Call_Field_OPS"
            },
            {
              "handler": "Predictive_Maintenance"
            }
          ]
        }
      ]
    },
    "id": "mqtt-lambda-tci",
    "featured": true,
    "repository_url": null,
    "json_url": "...mqtt-lambda-tci/mqtt-lambda-tci.mashling.json",
    "image_url": "...mqtt-lambda-tci/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...mqtt-lambda-tci/mqtt-lambda-tci-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...mqtt-lambda-tci/mqtt-lambda-tci-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "id": "secure-rest-gateway",
    "featured": true,
    "repository_url": null,
    "json_url": "...secure-rest-gateway/secure-rest-gateway.mashling.json",
    "image_url": "...secure-rest-gateway/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...secure-rest-gateway/secure-rest-gateway-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...secure-rest-gateway/secure-rest-gateway-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "mashling_schema": "0.2",
    "gateway": {
      "name": "mutualTLSGatewayApp",
      "version": "1.0.0",
      "display_name": "Mutual SSL HTTP Microgateway",
      "display_image": "displayImage.svg",
      "description": "This is the HTTP based microgateway app with mutual SSL enabled",
      "configurations": [
        {
          "name": "secureConfig",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "description": "Configuration for rest secure trigger with client auth",
          "settings": {
            "port": "9098",
            "enableTLS": "true",
            "serverCert": "${env.SERVER_CERT}",
            "serverKey": "${env.SERVER_KEY}",
            "enableClientAuth": "true",
            "trustStore": "${env.TRUST_STORE}"
          }
        }
      ],
      "triggers": [
        {
          "name": "get_animals_rest_secure_trigger",
          "description": "Animals rest secure trigger - get animal details",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "settings": {
            "config": "${configurations.secureConfig}",
            "method": "GET",
            "path": "/pets/{petId}",
            "optimize": "true"
          }
        }
      ],
      "event_handlers": [
        {
          "name": "animals_get_handler",
          "description": "Handle animals",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/SecureRestInvoker.json"
        }
      ],
      "event_links": [
        {
          "triggers": [
            "get_animals_rest_secure_trigger"
          ],
          "dispatches": [
            {
              "handler": "animals_get_handler"
            }
          ]
        }
      ]
    },
    "id": "secure-rest-gateway",
    "featured": true,
    "repository_url": null,
    "json_url": "...secure-rest-gateway/secure-rest-gateway.mashling.json",
    "image_url": "...secure-rest-gateway/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...secure-rest-gateway/secure-rest-gateway-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...secure-rest-gateway/secure-rest-gateway-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "id": "mqtt-gateway",
    "featured": false,
    "repository_url": null,
    "json_url": "...mqtt-gateway/mqtt-gateway.mashling.json",
    "image_url": "...mqtt-gateway/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...mqtt-gateway/mqtt-gateway-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...mqtt-gateway/mqtt-gateway-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "mashling_schema": "0.2",
    "gateway": {
      "name": "mqtt-gateway",
      "version": "1.0.0",
      "display_name": "Content-based MQTT and HTTP Router",
      "display_image": "displayImage.svg",
      "description": "A conditional MQTT and HTTP router that routes requests based on content",
      "configurations": [
        {
          "name": "restConfig",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "description": "Configuration for rest trigger",
          "settings": {
            "port": "9096"
          }
        },
        {
          "name": "mqttConfig",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/mqtt",
          "description": "Configuration for mqtt",
          "settings": {
            "broker": "tcp://localhost:1883",
            "id": "flogo",
            "user": "",
            "password": "",
            "store": "",
            "qos": "0",
            "cleansess": "false"
          }
        }
      ],
      "triggers": [
        {
          "name": "get_mqtt",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/mqtt",
          "settings": {
            "config": "${configurations.mqttConfig}",
            "topic": "get",
            "optimize": "true"
          }
        },
        {
          "name": "put_mqtt",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/mqtt",
          "settings": {
            "config": "${configurations.mqttConfig}",
            "topic": "put",
            "optimize": "true"
          }
        },
        {
          "name": "animals_rest_trigger",
          "description": "Animals rest trigger - PUT animal details",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "settings": {
            "config": "${configurations.restConfig}",
            "method": "PUT",
            "path": "/pets",
            "optimize": "true"
          }
        },
        {
          "name": "get_animals_rest_trigger",
          "description": "Animals rest trigger - get animal details",
          "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/gorillamuxtrigger",
          "settings": {
            "config": "${configurations.restConfig}",
            "method": "GET",
            "path": "/pets/{petId}",
            "optimize": "true"
          }
        }
      ],
      "event_handlers": [
        {
          "name": "mammals_handler",
          "description": "Handle mammals",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestPutActivity.json"
        },
        {
          "name": "birds_handler",
          "description": "Handle birds",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestPutActivity.json"
        },
        {
          "name": "animals_handler",
          "description": "Handle other animals",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestPutActivity.json"
        },
        {
          "name": "animals_get_handler",
          "description": "Handle other animals",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToRestGetActivity.json"
        }
      ],
      "event_links": [
        {
          "triggers": [
            "animals_rest_trigger",
            "put_mqtt"
          ],
          "dispatches": [
            {
              "if": "${trigger.content.name in (ELEPHANT,CAT)}",
              "handler": "mammals_handler"
            },
            {
              "if": "${trigger.content.name == SPARROW}",
              "handler": "birds_handler"
            },
            {
              "handler": "animals_handler"
            }
          ]
        },
        {
          "triggers": [
            "get_animals_rest_trigger",
            "get_mqtt"
          ],
          "dispatches": [
            {
              "handler": "animals_get_handler"
            }
          ]
        }
      ]
    },
    "id": "mqtt-gateway",
    "featured": false,
    "repository_url": null,
    "json_url": "...mqtt-gateway/mqtt-gateway.mashling.json",
    "image_url": "...mqtt-gateway/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...mqtt-gateway/mqtt-gateway-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...mqtt-gateway/mqtt-gateway-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "id": "RestTrigger-To-KafkaPublisher",
    "featured": false,
    "repository_url": null,
    "json_url": "...RestTrigger-To-KafkaPublisher/RestTrigger-To-KafkaPublisher.mashling.json",
    "image_url": "...RestTrigger-To-KafkaPublisher/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...RestTrigger-To-KafkaPublisher/RestTrigger-To-KafkaPublisher-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...RestTrigger-To-KafkaPublisher/RestTrigger-To-KafkaPublisher-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  },
  {
    "mashling_schema": "0.2",
    "gateway": {
      "name": "3recipe",
      "version": "1.0.0",
      "display_name": "HTTP Trigger to Kafka Publisher",
      "display_image": "displayImage.svg",
      "description": "This is a simple recipe that illustrates receiving messages on a HTTP trigger and publishing it via Kafka ",
      "configurations": [
        {
          "name": "kafkaConfig",
          "type": "github.com/TIBCOSoftware/flogo-contrib/trigger/kafkasub",
          "description": "Configuration for kafka cluster",
          "settings": {
            "BrokerUrl": "localhost:9092"
          }
        }
      ],
      "triggers": [
        {
          "name": "rest_trigger4",
          "description": "The trigger on 'pets' endpoint",
          "type": "github.com/TIBCOSoftware/flogo-contrib/trigger/rest",
          "settings": {
            "port": "9096",
            "method": "PUT",
            "path": "/petEvent",
            "autoIdReply": "true",
            "useReplyHandler": "true"
          }
        }
      ],
      "event_handlers": [
        {
          "name": "get_pet_handler4",
          "description": "Handle the user access",
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/RestTriggerToKafkaActivity.json",
          "params": {
            "uri": "petstore.swagger.io/v2/pet/3"
          }
        }
      ],
      "event_links": [
        {
          "triggers": [
            "rest_trigger4"
          ],
          "dispatches": [
            {
              "handler": "get_pet_handler4"
            }
          ]
        }
      ]
    },
    "id": "RestTrigger-To-KafkaPublisher",
    "featured": false,
    "repository_url": null,
    "json_url": "...RestTrigger-To-KafkaPublisher/RestTrigger-To-KafkaPublisher.mashling.json",
    "image_url": "...RestTrigger-To-KafkaPublisher/displayImage.svg",
    "binaries": [
      {
        "platform": "mac",
        "url": "...RestTrigger-To-KafkaPublisher/RestTrigger-To-KafkaPublisher-osx.zip"
      },
      {
        "platform": "linux",
        "url": "...RestTrigger-To-KafkaPublisher/RestTrigger-To-KafkaPublisher-linux.zip"
      },
      {
        "platform": "windows",
        "url": null
      }
    ]
  }
]
