sudo: required
language : 
  - go  
branches:
  only:
    - master
tags: true    
services:
  - docker
os:
#  - linux
#  - osx
  - windows
  
cache:
  bundler: false
  directories:
  - .build-cache          # images.txt
# Handle git submodules yourself
git:
    submodules: false
# Do a github login using token
before_install:
  - "echo -e \"machine github.com\n  login ${GITHUB_USER_TOKEN}\" >> ~/.netrc"
install:
  - go get -u github.com/constabulary/gb/...
  - go get github.com/TIBCOSoftware/mashling/...
  - cd $GOPATH/src/github.com/TIBCOSoftware
  - git clone https://github.com/TIBCOSoftware/mashling-recipes.git mashling-recipes
  - "git ls-remote --exit-code https://github.com/TIBCOSoftware/mashling-cicd.git ${TRAVIS_BRANCH} ;
    if [ $? -eq 0 ]; then 
        echo \"Branch ${TRAVIS_BRANCH} found on mashling-cicd\" ;
        git clone https://github.com/TIBCOSoftware/mashling-cicd.git --branch ${TRAVIS_BRANCH} --single-branch mashling-cicd ;
    else 
        echo \"Branch ${TRAVIS_BRANCH} not found on mashling-cicd. Using master\" ;
        git clone https://github.com/TIBCOSoftware/mashling-cicd.git mashling-cicd ;
    fi"
  - cp -r $GOPATH/src/github.com/TIBCOSoftware/mashling-cicd/dependency-config/* $GOPATH/src/github.com/TIBCOSoftware/mashling
  - cd $GOPATH/src/github.com/TIBCOSoftware/mashling
#  - godep restore
  - go install ./...
  - mashling help
  - cd $GOPATH/src/github.com/TIBCOSoftware
  - pushd mashling-cicd/sample-recipes
  - rm -rf builds
  - mkdir -p builds/latest master-builds/latest
  
script:
  - chmod ugo+x ./build-recipes.sh ./sanity.sh ./build-registry-recipes.sh
  - ./build-recipes.sh
  - ./sanity.sh
  - popd
  - pushd mashling-cicd/sample-recipes
  - ./build-registry-recipes.sh
  - popd
  - cd $GOPATH/src/github.com/TIBCOSoftware/mashling  
  - touch mashling.tgz
  - tar cvfz mashling.tgz --exclude=mashling.tgz .
  - find . -not -name "mashling.tgz" -not  -name "\." -not -name "\.\."  -print0 | xargs -0 rm -rf --
  - cd $GOPATH/src/github.com/TIBCOSoftware
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then    
    pushd mashling-cicd/docker/mashling;
    chmod ugo+x ./build-mashling.sh ;
    ./build-mashling.sh ;
    popd ;    
    pushd mashling-cicd/docker/mashling-sample;
    chmod ugo+x ./build-mashling-sample.sh ;
    ./build-mashling-sample.sh ;
    popd ;
    fi
    
after_script:
  - "[ -f \"${HOME}/.netrc\" ] && rm -f ${HOME}/.netrc"

after_success:
  - "docker login -u=\"${DOCKER_USERNAME}\" -p=\"${DOCKER_PASSWORD}\" tibdocker.tibco.com"
  - "if [ \"${TRAVIS_BRANCH}\" == \"master\" ]; then
    source $GOPATH/src/github.com/TIBCOSoftware/mashling-cicd/scripts/init.sh ;
    mashling::module::postbuild mashling mashling ;
    fi"
  - "if [ \"${TRAVIS_BRANCH}\" == \"master\" ]; then
    source  $GOPATH/src/github.com/TIBCOSoftware/mashling-cicd/scripts/init.sh;
    mashling::module::postbuild mashling-sample mashling-sample ;
    fi"  
deploy:  
 -  provider: s3
    access_key_id: $SITE_KEY
    secret_access_key: $SITE_KEY_SECRET
    bucket: $AWS_BUCKET
    region: $AWS_REGION
    skip_cleanup: true
    on:
      all_branches: true
      #branch: master
      #condition: $TRAVIS_BRANCH == master || $TRAVIS_BRANCH == v6.0
    local_dir: $GOPATH/src/github.com/TIBCOSoftware/mashling-cicd/sample-recipes/master-builds
    upload-dir: master-builds
## -  provider: s3
#    access_key_id: $SITE_KEY
#    secret_access_key: $SITE_KEY_SECRET
#    bucket: $AWS_BUCKET
#    region: $AWS_REGION
#    skip_cleanup: true
#    on:
#      tags: true
#    local_dir: $GOPATH/src/github.com/TIBCOSoftware/mashling-cicd/sample-recipes/master-builds
#    upload-dir: master-builds

